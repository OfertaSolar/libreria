<?php
//require_once("lib/util.php");
//require_once("lib/json.php");

namespace Ofertasolar\Lib;

use util;
use json;

/*
clase apiML
===========
fecha:   mayo 2023
autor:   Arturo FuentealbaG.
empresa: ofertasolar.cl

descripción:
Clase operativa que tiene como objeto rescatar y modificar datos desde cuenta
MercadoLibre y MercadoShop usando la API de MercadoLibre.


*/

class apiML {

   const API_ML  = "https://api.mercadolibre.com/oauth/token";
   const AUT_ML  = "https://auth.mercadolibre.cl/authorization";
   const DIR_ML  = "productos/ML/";

   protected $url_base;
   protected $ctl_auth;
   protected $appName;
   protected $appData;

   public function __construct($app) {
      $this->appName        = $app;
      $this->url_base       = "http://localhost/Tienda%20OfertaSolar/";
      $this->ctl_auth       = false;
      $this->_getData();
   }
   
   
   /*
      cuando ingresamos un code
      automaticamente efectuamos petición de token con parametro false
      para usar la opcion "authorization_code" y guardamos los datos
   */
   public function setCode($code){
      $this->appData["code"] = $code;
      $pet = $this->_getToken(false);
      $this->appData["access_token"]  = $pet->access_token;
      $this->appData["refresh_token"] = $pet->refresh_token;
      $this->putData();
   }

   public function getPrecios($itemID, $MS = true){
      return $this->_get_producto($itemID, 1, $MS);
   }
   
   
   public function getProducto($itemID){
      return $this->_get_producto($itemID);
   }

   public function getDescripcion($itemID){
      return $this->_get_producto($itemID, 2);
   }

   public function putProducto($itemID){
      return $this->_put_producto($itemID);
   }
   
   public function putData() {
      json::guardar($this->appData, $this->appName);
   }
   
   public function urlBase($url){
      $this->url_base = $url;
   }
   
   /*
      tipoDato:
         general:       0
         precios:       1
         descripcion:   2
   */
   private function _get_producto($itemID, $tipoDato = 0, $MS = true){
      $headers = array();
      $canal  = $MS ? "prices/types/standard/channels/mshops" : "sale_price?context=channel_marketplace";
      $uri[] = "https://api.mercadolibre.com/items/$itemID";
      $uri[] = "https://api.mercadolibre.com/items/$itemID/$canal";
      $uri[] = "https://api.mercadolibre.com/items/$itemID/description";
      
      $headers[] = 'Authorization: Bearer ' . $this->appData["access_token"];
      //$uri = "https://api.mercadolibre.com/items/$itemID";
      $ret = util::Curl($uri[$tipoDato], $headers);
      if(array_key_exists("error", (array)$ret)){$this->_setMessageToken($ret); return null;}
      else return $ret;
   }
   
   /*
      guarda los datos rescatados desde mercadolibre en el directorio productos/ML/MLC$itemID
      en tres archivos:
       - MLC$itemID-general
       - MLC$itemID-preciosMS
       - MLC$itemID-descripcion
   */
   private function _put_producto($itemID){
      $dir  = self::DIR_ML . "$itemID";
      if(!file_exists($dir)) mkdir($dir, 0700);

      $file = "$dir/$itemID-general";
      $json = $this->_get_producto($itemID);
      json::guardar($json, $file);
      
      $file = "$dir/$itemID-preciosMS";
      $json = $this->_get_producto($itemID, 1);
      json::guardar($json, $file);      
      
      $file = "$dir/$itemID-descripcion";
      $json = $this->_get_producto($itemID, 2);
      json::guardar($json, $file);       

   }
   
   
   private function _getData() {
      $file          = $this->appName . ".json";
      $this->appData = json_decode(file_get_contents($file), true);
   }
   
   private function _getToken($refreshToken = true){
      /*
      peticion de token:
      curl -X POST -H 'accept: application/json' -H 'content-type: application/x-www-form-urlencoded' 'https://api.mercadolibre.com/oauth/token' -d 'grant_type=authorization_code' -d 'client_id=6647271235267393' -d 'client_secret=IrUfrej9UABXTd4p9BbVw1slTFrpZ2Mw' -d 'code=$SERVER_GENERATED_AUTHORIZATION_CODE' -d 'redirect_uri=https://ofertasolar.cl'
      // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
      */
      $grant         = $refreshToken ? "refresh_token" : "authorization_code";
      $refresh       = $refreshToken ? "&refresh_token=" . $this->appData["refresh_token"] : "";

      $postfield     = "grant_type=$grant"
                     . "&client_id="         . $this->appData["client_id"]
                     . "&client_secret="     . $this->appData["client_secret"]
                     . "&code="              . $this->appData["code"]
                     . "&redirect_uri="      . $this->appData["redirect_uri"] . $refresh;
      
      $headers   = array();
      $headers[] = 'Accept: application/json';
      $headers[] = 'Content-Type: application/x-www-form-urlencoded';

      $ret = util::Curl(self::API_ML, $headers, $postfield, "POST");
         
      return (object)$ret;
   }
   
   private function _setMessageToken($ret){
      // ?response_type=code&client_id=
//util::imprime_arreglo($ret);
      $url = self::AUT_ML . "?response_type=code&client_id=" . $this->appData["client_id"] . "&redirect_uri=" . $this->appData["redirect_uri"];
      
      $html = util::abre_archivo("html/TokenML.html");
      $dic["url-token"] = $url;
      $dic["appName"] = $this->appName;
      
      $hora = date('H:i');
      

      $dic["token"] = $token = hash('sha256', $hora);
      $html = util::remplaza_datos($html, $dic);
      print $html;
   }

}
